/*
 * generated by Xtext 2.10.0
 */
package fr.i3s.gciatto.snn2uta.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.generator.IGenerator2
import java.util.List

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class NetworkDescriptionLanguageGenerator extends AbstractGenerator {
	
	val List<IGenerator2> generators = #[
		new NetworkDescriptionLanguageToUppaalGenerator(),
		new NetworkDescriptionLanguageToGraphVizGenerator()
	]
	
	var GeneratorContext ctx;
	
	override void beforeGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		ctx = new GeneratorContext(context);
		generators.forEach[it.beforeGenerate(resource, fsa, ctx)]
	}

	override void afterGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		generators.forEach[it.afterGenerate(resource, fsa, ctx)]
		ctx = null
	}

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		generators.forEach[it.doGenerate(resource, fsa, ctx)]
	}
}